/**
 * This class is generated by jOOQ
 */
package io.github.jklingsporn.vertx.auth.jooq.generated.tables;


import io.github.jklingsporn.vertx.auth.jooq.generated.Auth;
import io.github.jklingsporn.vertx.auth.jooq.generated.Keys;
import io.github.jklingsporn.vertx.auth.jooq.generated.tables.records.UserRolesRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRoles extends TableImpl<UserRolesRecord> {

    private static final long serialVersionUID = -732217330;

    /**
     * The reference instance of <code>AUTH.USER_ROLES</code>
     */
    public static final UserRoles USER_ROLES = new UserRoles();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserRolesRecord> getRecordType() {
        return UserRolesRecord.class;
    }

    /**
     * The column <code>AUTH.USER_ROLES.USERNAME</code>.
     */
    public final TableField<UserRolesRecord, String> USERNAME = createField("USERNAME", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>AUTH.USER_ROLES.ROLE</code>.
     */
    public final TableField<UserRolesRecord, String> ROLE = createField("ROLE", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * Create a <code>AUTH.USER_ROLES</code> table reference
     */
    public UserRoles() {
        this("USER_ROLES", null);
    }

    /**
     * Create an aliased <code>AUTH.USER_ROLES</code> table reference
     */
    public UserRoles(String alias) {
        this(alias, USER_ROLES);
    }

    private UserRoles(String alias, Table<UserRolesRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserRoles(String alias, Table<UserRolesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Auth.AUTH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserRolesRecord> getPrimaryKey() {
        return Keys.SYS_PK_10094;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserRolesRecord>> getKeys() {
        return Arrays.<UniqueKey<UserRolesRecord>>asList(Keys.SYS_PK_10094);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRoles as(String alias) {
        return new UserRoles(alias, this);
    }

    /**
     * Rename this table
     */
    public UserRoles rename(String name) {
        return new UserRoles(name, null);
    }
}
