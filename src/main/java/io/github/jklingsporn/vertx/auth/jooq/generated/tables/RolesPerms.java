/**
 * This class is generated by jOOQ
 */
package io.github.jklingsporn.vertx.auth.jooq.generated.tables;


import io.github.jklingsporn.vertx.auth.jooq.generated.Auth;
import io.github.jklingsporn.vertx.auth.jooq.generated.Keys;
import io.github.jklingsporn.vertx.auth.jooq.generated.tables.records.RolesPermsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RolesPerms extends TableImpl<RolesPermsRecord> {

    private static final long serialVersionUID = 247865942;

    /**
     * The reference instance of <code>AUTH.ROLES_PERMS</code>
     */
    public static final RolesPerms ROLES_PERMS = new RolesPerms();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RolesPermsRecord> getRecordType() {
        return RolesPermsRecord.class;
    }

    /**
     * The column <code>AUTH.ROLES_PERMS.ROLE</code>.
     */
    public final TableField<RolesPermsRecord, String> ROLE = createField("ROLE", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>AUTH.ROLES_PERMS.PERM</code>.
     */
    public final TableField<RolesPermsRecord, String> PERM = createField("PERM", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * Create a <code>AUTH.ROLES_PERMS</code> table reference
     */
    public RolesPerms() {
        this("ROLES_PERMS", null);
    }

    /**
     * Create an aliased <code>AUTH.ROLES_PERMS</code> table reference
     */
    public RolesPerms(String alias) {
        this(alias, ROLES_PERMS);
    }

    private RolesPerms(String alias, Table<RolesPermsRecord> aliased) {
        this(alias, aliased, null);
    }

    private RolesPerms(String alias, Table<RolesPermsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Auth.AUTH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RolesPermsRecord> getPrimaryKey() {
        return Keys.SYS_PK_10096;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RolesPermsRecord>> getKeys() {
        return Arrays.<UniqueKey<RolesPermsRecord>>asList(Keys.SYS_PK_10096);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RolesPerms as(String alias) {
        return new RolesPerms(alias, this);
    }

    /**
     * Rename this table
     */
    public RolesPerms rename(String name) {
        return new RolesPerms(name, null);
    }
}
