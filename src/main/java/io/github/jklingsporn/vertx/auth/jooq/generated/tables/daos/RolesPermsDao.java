/**
 * This class is generated by jOOQ
 */
package io.github.jklingsporn.vertx.auth.jooq.generated.tables.daos;


import io.github.jklingsporn.vertx.VertxDAO;
import io.github.jklingsporn.vertx.auth.jooq.generated.tables.RolesPerms;
import io.github.jklingsporn.vertx.auth.jooq.generated.tables.records.RolesPermsRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


import io.vertx.core.Handler;
import io.vertx.core.AsyncResult;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RolesPermsDao extends DAOImpl<RolesPermsRecord, io.github.jklingsporn.vertx.auth.jooq.generated.tables.pojos.RolesPerms, Record2<String, String>> implements VertxDAO<io.github.jklingsporn.vertx.auth.jooq.generated.tables.records.RolesPermsRecord,io.github.jklingsporn.vertx.auth.jooq.generated.tables.pojos.RolesPerms,org.jooq.Record2<java.lang.String, java.lang.String>> {

    /**
     * Create a new RolesPermsDao without any configuration
     */
    public RolesPermsDao() {
        super(RolesPerms.ROLES_PERMS, io.github.jklingsporn.vertx.auth.jooq.generated.tables.pojos.RolesPerms.class);
    }

    /**
     * Create a new RolesPermsDao with an attached configuration
     */
    public RolesPermsDao(Configuration configuration) {
        super(RolesPerms.ROLES_PERMS, io.github.jklingsporn.vertx.auth.jooq.generated.tables.pojos.RolesPerms.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Record2<String, String> getId(io.github.jklingsporn.vertx.auth.jooq.generated.tables.pojos.RolesPerms object) {
        return compositeKeyRecord(object.getRole(), object.getPerm());
    }

    /**
     * Fetch records that have <code>ROLE IN (values)</code>
     */
    public List<io.github.jklingsporn.vertx.auth.jooq.generated.tables.pojos.RolesPerms> fetchByRole(String... values) {
        return fetch(RolesPerms.ROLES_PERMS.ROLE, values);
    }

    /**
     * Fetch records that have <code>PERM IN (values)</code>
     */
    public List<io.github.jklingsporn.vertx.auth.jooq.generated.tables.pojos.RolesPerms> fetchByPerm(String... values) {
        return fetch(RolesPerms.ROLES_PERMS.PERM, values);
    }

    /**
     * Fetch records that have <code>ROLE IN (values)</code> asynchronously
     */
    public void fetchByRoleAsync(List<String> values,Handler<AsyncResult<List<io.github.jklingsporn.vertx.auth.jooq.generated.tables.pojos.RolesPerms>>> resultHandler) {
        fetchAsync(RolesPerms.ROLES_PERMS.ROLE,values,resultHandler);
    }

    /**
     * Fetch records that have <code>PERM IN (values)</code> asynchronously
     */
    public void fetchByPermAsync(List<String> values,Handler<AsyncResult<List<io.github.jklingsporn.vertx.auth.jooq.generated.tables.pojos.RolesPerms>>> resultHandler) {
        fetchAsync(RolesPerms.ROLES_PERMS.PERM,values,resultHandler);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
